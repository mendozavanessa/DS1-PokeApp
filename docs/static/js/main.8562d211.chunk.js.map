{"version":3,"sources":["components/Navbar.js","components/AddPoke.js","helpers/getPokemon.js","components/Modal.js","components/PokeData.js","components/PokeCard.js","hooks/PokeFetch.js","PokedexApp.js","hooks/useCounter.js","index.js"],"names":["Navbar","React","useContext","className","src","alt","AddPoke","setPoke","useState","inputValue","setInputValue","class","onSubmit","e","preventDefault","length","poke","console","log","type","placeholder","value","onChange","target","protoTypes","PropTypes","func","isRequired","getPokemon","pokemon","a","url","fetch","resp","json","data","id","name","base_experience","height","order","weight","abilities","sprites","types","img","other","dream_world","front_default","map","tp","slot","powers","ab","ability","Modal","tabindex","role","PokeData","PokeCard","loading","state","setState","useEffect","then","imgs","setTimeout","PokeFetch","PokedexApp","initialState","counter","setCounter","increment","parseInt","decrement","reset","useCounter","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8562d211.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst { useContext } = React;\r\n\r\nconst Navbar = () => {\r\n\r\n  let imgUrl =\r\n    \"https://raw.githubusercontent.com/PokeAPI/media/master/logo/pokeapi_256.png\";\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"navbar1\">\r\n        <img src={\"https://upload.wikimedia.org/wikipedia/commons/5/51/Pokebola-pokeball-png-0.png\"}/>\r\n        <img src={imgUrl} alt=\"pokeapi-logo\" className=\"navbar-img\" />\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, {useState} from 'react';\r\nimport PropTypes  from 'prop-types' ;\r\n\r\nexport const AddPoke = ({ setPoke }) => {\r\n    const[ inputValue, setInputValue] = useState('');\r\n        \r\n\r\n    const handleInputChange = (e) =>{\r\n            setInputValue(e.target.value );\r\n            \r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if (inputValue.length > 0) {\r\n            setPoke( poke => [ inputValue]);\r\n            setInputValue('');\r\n            console.log(inputValue);\r\n        }\r\n           \r\n    }\r\n    \r\n    \r\n    return (\r\n\r\n        <form class=\"row justify-content-md-center\" onSubmit={ handleSubmit }>\r\n            <div class=\"col-6\">\r\n                <div>\r\n                    <input \r\n                        type=\"text\" \r\n                        class=\"form-control\" \r\n                        placeholder='&#xf002; Buscar pokemon por nombre o id'\r\n                        value = { inputValue }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div >\r\n                <button type=\"submit\" class=\"btn btn-primary btn-lg\">Buscar</button>\r\n            </div>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nAddPoke.protoTypes = {\r\n    setPoke: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddPoke;\r\n","// import React from 'react'\r\n\r\nexport const getPokemon = async (pokemon) => {\r\n\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${pokemon}/`\r\n    const resp = await fetch(url);\r\n    const data = await resp.json();\r\n    const {id,name,base_experience,height,order, weight, abilities, sprites, types} = data;\r\n    const img = sprites.other.dream_world.front_default;\r\n    // console.log(resp);\r\n    //  console.log(id);\r\n    // console.log(name);\r\n    //console.log(height);\r\n    // console.log(sprites.front_default);\r\n    // console.log(types);\r\n\r\n    const type = types.map(tp =>{\r\n        return{\r\n            id: tp.slot,\r\n            name: tp.type.name,\r\n        }\r\n    })\r\n    const powers = abilities.map( ab => {\r\n        return{\r\n            id: ab.slot,\r\n            name: ab.ability.name,\r\n           \r\n        }\r\n    });\r\n\r\n    // console.log(powers);\r\n    // console.log(type);\r\n    return{ \r\n        id, \r\n        name,\r\n        base_experience,\r\n        height,\r\n        order,\r\n        weight,\r\n        img,\r\n        powers,\r\n        type\r\n        \r\n    };\r\n}\r\n","import React from 'react';\r\n\r\nexport const Modal = ({data}) => {\r\n    const {id, name, img, base_experience, height,powers, type, weight} = data;\r\n    return(\r\n\r\n        <>\r\n        <div class=\"modal fade\" id=\"pokeModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n            <div class=\"modal-dialog\" role=\"document\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header\">\r\n                        <h5 class=\"modal-title\" id=\"exampleModalLabel\">{id} {name}</h5>\r\n                        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div className='imgModal'><img src={img} alt={name} /></div>\r\n                        <ul>\r\n                            <li>Experiencia base: {base_experience}</li>\r\n                            <li>Altura: {height}</li>\r\n                            <li>Peso: {weight}</li>\r\n                            <li>Habilidades:\r\n                                <ul>\r\n                                    {powers?.map((ab) => {\r\n                                    return <li key={ab.id}>{ab.name}</li>;\r\n                                    })}\r\n                                </ul>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div></>\r\n    )\r\n    \r\n};\r\n","import React from 'react'\r\nimport { Modal } from './Modal';\r\n\r\nexport const PokeData = ({id, name, img, base_experience, height,powers, type, weight}) => {\r\n    const data={id, name, img,base_experience, height,powers, type, weight };\r\n    return (\r\n        <div className='card cardPokemon animate__animated animate__bounce' >\r\n            <div className='imgPokemon'>\r\n                <img src={img} alt={name}/> \r\n            </div>\r\n            <div class=\"card-body\">\r\n                <h5 class=\"card-title\">#{id} { name }</h5>\r\n                <div>\r\n                    {type?.map((tp)=>{\r\n                        return <span className='type' key={tp.id}> Tipo: {tp.name}</span>;\r\n                    })}\r\n            \r\n                </div> \r\n                <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#pokeModal\">Tarjeta Personal</button>\r\n            </div>\r\n            <Modal data = {data}  />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PokeData;","import React from 'react'\r\nimport { PokeFetch } from '../hooks/PokeFetch'\r\nimport PokeData from './PokeData'\r\n\r\nexport const PokeCard = ({pokemon}) => {\r\n\r\n    const {data , loading} = PokeFetch(pokemon);\r\n    \r\n    \r\n    return (\r\n        <>{\r\n            loading\r\n            ?\r\n            (\r\n                !data==null?\r\n                <div className='card alert alert-dark text-center'>\r\n                Loading...\r\n                 </div>\r\n                :\r\n                <div className='alert alert-dark text-center'>\r\n                    El pokemon no se encontro 😭\r\n                </div>\r\n                 \r\n            \r\n            )\r\n            :\r\n            (\r\n                <div>\r\n                {\r\n                                \r\n                        < PokeData\r\n                            key= { data.id}\r\n                            {...data}\r\n                        />\r\n                        \r\n                    \r\n                }\r\n            </div>\r\n            )\r\n         }\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PokeCard;\r\n","import { useEffect,useState } from \"react\";\r\nimport { getPokemon } from \"../helpers/getPokemon\";\r\n\r\n\r\n\r\nexport const PokeFetch = (pokemon) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( ()=>{\r\n        getPokemon(pokemon)\r\n            .then( imgs => {\r\n                \r\n                setTimeout(() => {\r\n                    // console.log(imgs);\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    },1000);\r\n                });\r\n            });\r\n        \r\n    },[pokemon])\r\n\r\n    \r\n\r\n    return state;\r\n}\r\n\r\n","import React, { useState }  from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport AddPoke from \"./components/AddPoke\";\r\nimport PokeCard from \"./components/PokeCard\";\r\nimport { useCounter } from \"./hooks/useCounter\";\r\n\r\n\r\n\r\n\r\n\r\nexport const PokedexApp = () => {\r\n\r\n    const {counter,increment,decrement,reset,setCounter} = useCounter();\r\n   \r\n\r\n    \r\n    return (\r\n        <div>\r\n            <Navbar />\r\n            <div className=\"pagination\">\r\n                <span onClick={decrement} class=\"previous\"><i class=\"fas fa-arrow-circle-left\"></i></span>\r\n                <span onClick={reset} class=\"home\"><i class=\"fas fa-home\"></i></span>\r\n                <span onClick={increment } class=\"next\"><i class=\"fas fa-arrow-circle-right\"></i></span>\r\n            </div>\r\n            <hr/>\r\n\r\n             <AddPoke setPoke = { setCounter }/>     \r\n            <ol className=\"contenedor\">\r\n                {\r\n                    counter.map( (pokemon) =>\r\n                        \r\n                         < PokeCard\r\n                            key = { pokemon }\r\n                            pokemon = { pokemon }\r\n                        />\r\n                        \r\n                    )\r\n\r\n                } \r\n\r\n            \r\n            </ol> \r\n            \r\n        </div>\r\n    )\r\n}\r\n","import { useState } from \"react\"\r\n\r\n\r\nexport const useCounter = (initialState = [1,2,3,4,5,6,7,8,9]) => {\r\n\r\n    const [counter, setCounter] = useState(initialState)\r\n    //Definir Funciones\r\n    const increment = ( )=>{\r\n        if(counter.length>1){\r\n        setCounter( counter?.map((e)=>{\r\n            return e+9;\r\n        }) )\r\n        }\r\n        else{\r\n            setCounter( counter?.map((e)=>{\r\n                return parseInt(e)+1;\r\n            }) )\r\n        };\r\n    }\r\n\r\n    const decrement = ( )=>{\r\n        if (counter[0]>1){\r\n            if(counter.length>1){\r\n            setCounter( counter?.map((e)=>{\r\n                return e-9;\r\n            }) );\r\n            }\r\n            else{\r\n                setCounter( counter?.map((e)=>{\r\n                    return parseInt(e)-1;\r\n                }) )}\r\n        }\r\n    }\r\n\r\n    const reset = ()=>{\r\n        setCounter(initialState);\r\n    }\r\n    return{\r\n        counter,\r\n        increment,\r\n        decrement,\r\n        reset,\r\n        setCounter\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { PokedexApp } from './PokedexApp';\n\n\nReactDOM.render(\n \n    <PokedexApp />,\n  \n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}